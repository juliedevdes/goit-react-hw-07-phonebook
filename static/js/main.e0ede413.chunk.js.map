{"version":3,"sources":["components/ContactsListItem/ContactsListItem.module.css","components/ContactList/ContactsList.module.css","components/Filter/Filter.module.css","App.module.css","redux/contacts/contactsApi.js","redux/contacts/contactsOperations.js","components/ContacsForm/ContacsForm.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactsList.js","redux/actions.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContacsForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","axios","get","data","postContact","name","number","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","contact","ContacsForm","useState","setName","setNum","dispatch","useDispatch","useSelector","store","entities","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","el","alert","className","s","inputName","placeholder","onChange","pattern","type","required","labelNum","inputNum","btn","ContasctsListItem","num","onClick","ContasctsList","state","filter","toLowerCase","includes","getVisibleContacts","useEffect","list","map","item","handleFilter","createAction","Filter","label","input","App","root","createReducer","fulfilled","_","payload","isLoading","pending","rejected","error","combineReducers","filterReducer","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0ede413.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactsListItem_name__3HBT-\",\"num\":\"ContactsListItem_num__1DiK4\",\"btn\":\"ContactsListItem_btn__Wl5Qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3iDfq\",\"item\":\"ContactsList_item__27xWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__28AqT\",\"input\":\"Filter_input__WZl3m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__13emx\"};","import axios from \"axios\";\n\naxios.defaults.baseURL =\n  \"https://619642c1af46280017e7df3d.mockapi.io/phonebook/\";\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(\"contacts\");\n  return data;\n}\n\nexport async function postContact({ name, number }) {\n  const { data } = await axios.post(\"contacts\", { name, number });\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`contacts/${id}`);\n  return data;\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as contactsAPI from \"./contactsApi\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id) => {\n    await contactsAPI.deleteContact(id);\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  }\n);\n\nexport const postContact = createAsyncThunk(\n  \"contacts/postContact\",\n  async (contact) => {\n    await contactsAPI.postContact(contact);\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  }\n);\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { postContact } from \"../../redux/contacts/contactsOperations\";\n\nfunction ContacsForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNum] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const contacts = useSelector((store) => store.contacts.entities);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNum(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (contacts.some((el) => el.name === name)) {\n      alert(\"There is already contact with the same name\");\n      return;\n    }\n\n    dispatch(\n      postContact({\n        name,\n        number,\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setNum(\"\");\n    setName(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        name:\n        <input\n          className={s.inputName}\n          placeholder=\"Jane Wayeet\"\n          name=\"name\"\n          onChange={handleInputChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          type=\"text\"\n          required\n        />\n      </label>\n      <label className={s.labelNum}>\n        number:\n        <input\n          className={s.inputNum}\n          placeholder=\"+ 00-000-00\"\n          name=\"number\"\n          onChange={handleInputChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          type=\"tel\"\n          required\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContacsForm;\n","import s from \"./ContactsListItem.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\n\nimport { deleteContact } from \"../../redux/contacts/contactsOperations\";\n\nfunction ContasctsListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <span className={s.name}> {name}</span>\n      <span className={s.num}> {number}</span>\n      <button\n        className={s.btn}\n        name={name}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        delete\n      </button>\n    </div>\n  );\n}\n\nContasctsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContasctsListItem;\n","import ContasctsListItem from \"../ContactsListItem/ContactsListItem\";\nimport s from \"./ContactsList.module.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { fetchContacts } from \"../../redux/contacts/contactsOperations\";\n\nfunction ContasctsList() {\n  const getVisibleContacts = (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const contacts = useSelector((state) =>\n    getVisibleContacts(state.contacts.entities, state.filter)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => {\n        return (\n          <li className={s.item} key={contact.id}>\n            <ContasctsListItem\n              name={contact.name}\n              number={contact.number}\n              id={contact.id}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContasctsList;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const handleFilter = createAction(\"HANDLE_FILTER\");\n","import s from \"./Filter.module.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleFilter } from \"../../redux/actions\";\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector((state) => state.filter);\r\n\r\n  const handleFilterChange = (e) => {\r\n    dispatch(handleFilter(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      search through your contacts\r\n      <input\r\n        placeholder=\"...\"\r\n        className={s.input}\r\n        name=\"filterValue\"\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import ContacsForm from \"./components/ContacsForm/ContacsForm\";\nimport ContasctsList from \"./components/ContactList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  return (\n    <div className={s.root}>\n      <h2>Phonebook</h2>\n      <ContacsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContasctsList />\n    </div>\n  );\n}\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  fetchContacts,\n  postContact,\n  deleteContact,\n} from \"./contactsOperations\";\n\nconst entities = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [postContact.fulfilled]: (_, { payload }) => payload,\n  [deleteContact.fulfilled]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.rejected]: () => false,\n  [fetchContacts.fulfilled]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ entities, isLoading, error });\n","import { configureStore, createReducer } from \"@reduxjs/toolkit\";\nimport { handleFilter } from \"./actions\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst filterReducer = createReducer(\"\", {\n  [handleFilter]: (_, { payload }) => `${payload}`,\n});\n\nconst store = configureStore({\n  reducer: {\n    filter: filterReducer,\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputName\":\"ContactForm_inputName__1w208\",\"inputNum\":\"ContactForm_inputNum__37Uvu\",\"label\":\"ContactForm_label__21FoC\",\"labelNum\":\"ContactForm_labelNum__3uMKP\",\"btn\":\"ContactForm_btn__1lI6h\"};"],"sourceRoot":""}